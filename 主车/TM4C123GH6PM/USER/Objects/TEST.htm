<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\TEST.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\TEST.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060422: Last Updated: Mon Apr 14 18:57:59 2025
<BR><P>
<H3>Maximum Stack Usage =        272 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Menu_Process &rArr; task4 &rArr; Track_Direction_Control2 &rArr; Get_Grayscale_Offset &rArr; KalmanFilter_Update &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[a]">Reset_Handler</a>
 <LI><a href="#[1]">NmiSR</a>
 <LI><a href="#[2]">FaultISR</a>
 <LI><a href="#[3]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[e]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">SysCtlDelay</a><BR>
 <LI><a href="#[1]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NmiSR</a><BR>
 <LI><a href="#[2]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">FaultISR</a><BR>
 <LI><a href="#[3]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2]">FaultISR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[3]">IntDefaultHandler</a> from startup_rvmdk.o(RESET) referenced 114 times from startup_rvmdk.o(RESET)
 <LI><a href="#[1]">NmiSR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[6]">PortE_Interrupt</a> from key.o(i.PortE_Interrupt) referenced from key.o(i.KEY_Init)
 <LI><a href="#[5]">PortF_Interrupt</a> from key.o(i.PortF_Interrupt) referenced from key.o(i.KEY_Init)
 <LI><a href="#[a]">Reset_Handler</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[7]">TIMER0_IRQHandler</a> from my_timer.o(i.TIMER0_IRQHandler) referenced from my_timer.o(i.Timer0_Init)
 <LI><a href="#[9]">UART0_IRQHandler</a> from uart0.o(i.UART0_IRQHandler) referenced from uart0.o(i.uart0_Init)
 <LI><a href="#[8]">fputc</a> from uart0.o(i.fputc) referenced from printf1.o(i.__0printf$1)
 <LI><a href="#[4]">main</a> from test.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[a]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[b]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[67]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[c]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1d]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[68]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[69]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[6a]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[6b]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[6c]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[6d]"></a>CPUcpsid</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[6e]"></a>CPUprimask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[37]"></a>CPUcpsie</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
</UL>

<P><STRONG><a name="[6f]"></a>CPUwfi</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[70]"></a>CPUbasepriSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[71]"></a>CPUbasepriGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[e]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Process
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BEEP_BeepNTimes
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task2
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task1
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortF_Interrupt
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortE_Interrupt
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_FlashNTimes
</UL>

<P><STRONG><a name="[f]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control3
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control2
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control1
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KalmanFilter_Update
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>

<P><STRONG><a name="[14]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control3
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control2
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control1
</UL>

<P><STRONG><a name="[15]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[16]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_Init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control3
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control2
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control1
</UL>

<P><STRONG><a name="[17]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KalmanFilter_Update
</UL>

<P><STRONG><a name="[18]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_Init
</UL>

<P><STRONG><a name="[19]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_Init
</UL>

<P><STRONG><a name="[3b]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control3
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control2
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control1
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KalmanFilter_Update
</UL>

<P><STRONG><a name="[1b]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control3
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control2
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control1
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KalmanFilter_Update
</UL>

<P><STRONG><a name="[72]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[61]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[10]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[73]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[1a]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[74]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[11]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[75]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[76]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[1c]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[77]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[13]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[12]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[d]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[78]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[79]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[7a]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[1e]"></a>BEEP_BeepNTimes</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, beep.o(i.BEEP_BeepNTimes))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = BEEP_BeepNTimes &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_On
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Off
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Process
</UL>

<P><STRONG><a name="[22]"></a>Blue_Light_Control</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, rgb.o(i.Blue_Light_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Blue_Light_Control
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_FlashNTimes
</UL>

<P><STRONG><a name="[24]"></a>Buzzer_Init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, beep.o(i.Buzzer_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Buzzer_Init &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralReady
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21]"></a>Buzzer_Off</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, beep.o(i.Buzzer_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Buzzer_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BEEP_BeepNTimes
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task2
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task1
</UL>

<P><STRONG><a name="[1f]"></a>Buzzer_On</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, beep.o(i.Buzzer_On))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Buzzer_On
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BEEP_BeepNTimes
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task2
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task1
</UL>

<P><STRONG><a name="[27]"></a>GPIODirModeSet</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeQEI
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Line7_Init
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Init
</UL>

<P><STRONG><a name="[48]"></a>GPIOIntClear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortF_Interrupt
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortE_Interrupt
</UL>

<P><STRONG><a name="[3a]"></a>GPIOIntEnable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gpio.o(i.GPIOIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
</UL>

<P><STRONG><a name="[29]"></a>GPIOIntRegister</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, gpio.o(i.GPIOIntRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIOIntRegister &rArr; _GPIOIntNumberGet
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GPIOIntNumberGet
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntRegister
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
</UL>

<P><STRONG><a name="[47]"></a>GPIOIntStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gpio.o(i.GPIOIntStatus))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortF_Interrupt
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortE_Interrupt
</UL>

<P><STRONG><a name="[39]"></a>GPIOIntTypeSet</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, gpio.o(i.GPIOIntTypeSet))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
</UL>

<P><STRONG><a name="[28]"></a>GPIOPadConfigSet</STRONG> (Thumb, 384 bytes, Stack size 20 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeQEI
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Line7_Init
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Init
</UL>

<P><STRONG><a name="[4a]"></a>GPIOPinConfigure</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, gpio.o(i.GPIOPinConfigure))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIOPinConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QEI1_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QEI0_Init
</UL>

<P><STRONG><a name="[2f]"></a>GPIOPinRead</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinRead))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task2
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task1
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortF_Interrupt
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortE_Interrupt
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Grayscale_Offset1
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Grayscale_Offset
</UL>

<P><STRONG><a name="[2d]"></a>GPIOPinTypeQEI</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeQEI))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIOPinTypeQEI &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QEI1_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QEI0_Init
</UL>

<P><STRONG><a name="[23]"></a>GPIOPinWrite</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Init
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Init
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_On
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Off
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Grren_Light_Control
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blue_Light_Control
</UL>

<P><STRONG><a name="[2e]"></a>Get_Grayscale_Offset</STRONG> (Thumb, 278 bytes, Stack size 48 bytes, track.o(i.Get_Grayscale_Offset))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Get_Grayscale_Offset &rArr; KalmanFilter_Update &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KalmanFilter_Update
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control2
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control1
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control
</UL>

<P><STRONG><a name="[31]"></a>Get_Grayscale_Offset1</STRONG> (Thumb, 278 bytes, Stack size 48 bytes, track.o(i.Get_Grayscale_Offset1))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Get_Grayscale_Offset1 &rArr; KalmanFilter_Update &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KalmanFilter_Update
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control3
</UL>

<P><STRONG><a name="[32]"></a>Get_Motor_Speed</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, encoder.o(i.Get_Motor_Speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Get_Motor_Speed &rArr; Get_QEI_Count
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_QEI_Count
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
</UL>

<P><STRONG><a name="[33]"></a>Get_QEI_Count</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, encoder.o(i.Get_QEI_Count))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Get_QEI_Count
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QEIPositionGet
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Motor_Speed
</UL>

<P><STRONG><a name="[35]"></a>Grren_Light_Control</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, rgb.o(i.Grren_Light_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Grren_Light_Control
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Process
</UL>

<P><STRONG><a name="[2c]"></a>IntEnable</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, interrupt.o(i.IntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntRegister
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntRegister
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntRegister
</UL>

<P><STRONG><a name="[36]"></a>IntMasterEnable</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, interrupt.o(i.IntMasterEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IntMasterEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPUcpsie
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
</UL>

<P><STRONG><a name="[2b]"></a>IntRegister</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, interrupt.o(i.IntRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = IntRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntRegister
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntRegister
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntRegister
</UL>

<P><STRONG><a name="[38]"></a>KEY_Init</STRONG> (Thumb, 156 bytes, Stack size 8 bytes, key.o(i.KEY_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = KEY_Init &rArr; GPIOIntRegister &rArr; _GPIOIntNumberGet
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntTypeSet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntRegister
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntEnable
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralReady
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[30]"></a>KalmanFilter_Update</STRONG> (Thumb, 180 bytes, Stack size 48 bytes, track.o(i.KalmanFilter_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = KalmanFilter_Update &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Grayscale_Offset1
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Grayscale_Offset
</UL>

<P><STRONG><a name="[3c]"></a>LED_FlashNTimes</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, rgb.o(i.LED_FlashNTimes))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LED_FlashNTimes &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blue_Light_Control
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Process
</UL>

<P><STRONG><a name="[3d]"></a>Line7_Init</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, track.o(i.Line7_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Line7_Init &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3e]"></a>Menu_Process</STRONG> (Thumb, 216 bytes, Stack size 8 bytes, key.o(i.Menu_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = Menu_Process &rArr; task4 &rArr; Track_Direction_Control2 &rArr; Get_Grayscale_Offset &rArr; KalmanFilter_Update &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BEEP_BeepNTimes
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task2
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task1
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_FlashNTimes
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Grren_Light_Control
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[44]"></a>Motor_Init</STRONG> (Thumb, 698 bytes, Stack size 32 bytes, motor.o(i.Motor_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Motor_Init &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMOutputInvert
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralReady
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_MotorDutyCycle
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[45]"></a>PWMOutputInvert</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, pwm.o(i.PWMOutputInvert))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_Init
</UL>

<P><STRONG><a name="[64]"></a>Pid_Init</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, pid.o(i.Pid_Init))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>Pid_OutLimit</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, pid.o(i.Pid_OutLimit))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control3
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control2
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control1
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control
</UL>

<P><STRONG><a name="[52]"></a>Pid_control</STRONG> (Thumb, 250 bytes, Stack size 0 bytes, pid.o(i.Pid_control))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control3
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control2
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control1
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control
</UL>

<P><STRONG><a name="[6]"></a>PortE_Interrupt</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, key.o(i.PortE_Interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = PortE_Interrupt &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntStatus
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntClear
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> key.o(i.KEY_Init)
</UL>
<P><STRONG><a name="[5]"></a>PortF_Interrupt</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, key.o(i.PortF_Interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = PortF_Interrupt &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntStatus
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntClear
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> key.o(i.KEY_Init)
</UL>
<P><STRONG><a name="[49]"></a>QEI0_Init</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, encoder.o(i.QEI0_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = QEI0_Init &rArr; GPIOPinTypeQEI &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeQEI
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinConfigure
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QEIPositionSet
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QEIEnable
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QEIConfigure
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e]"></a>QEI1_Init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, encoder.o(i.QEI1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = QEI1_Init &rArr; GPIOPinTypeQEI &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeQEI
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinConfigure
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QEIPositionSet
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QEIEnable
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QEIConfigure
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b]"></a>QEIConfigure</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, qei.o(i.QEIConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QEI1_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QEI0_Init
</UL>

<P><STRONG><a name="[4c]"></a>QEIEnable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, qei.o(i.QEIEnable))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QEI1_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QEI0_Init
</UL>

<P><STRONG><a name="[34]"></a>QEIPositionGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, qei.o(i.QEIPositionGet))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_QEI_Count
</UL>

<P><STRONG><a name="[4d]"></a>QEIPositionSet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, qei.o(i.QEIPositionSet))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QEI1_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QEI0_Init
</UL>

<P><STRONG><a name="[4f]"></a>RGB_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, rgb.o(i.RGB_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RGB_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>Set_Motor</STRONG> (Thumb, 212 bytes, Stack size 8 bytes, motor.o(i.Set_Motor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Set_Motor
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_MotorPwm
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_MotorDutyCycle
</UL>

<P><STRONG><a name="[46]"></a>Set_MotorDutyCycle</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, motor.o(i.Set_MotorDutyCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Set_MotorDutyCycle &rArr; Set_Motor
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Motor
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_Init
</UL>

<P><STRONG><a name="[51]"></a>Set_MotorPwm</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, motor.o(i.Set_MotorPwm))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Set_MotorPwm &rArr; Set_Motor
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Motor
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
</UL>

<P><STRONG><a name="[20]"></a>SysCtlClockGet</STRONG> (Thumb, 324 bytes, Stack size 20 bytes, sysctl.o(i.SysCtlClockGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Process
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BEEP_BeepNTimes
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task2
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task1
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortF_Interrupt
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortE_Interrupt
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_FlashNTimes
</UL>

<P><STRONG><a name="[25]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysCtlPeripheralEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QEI1_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QEI0_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Line7_Init
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Init
</UL>

<P><STRONG><a name="[26]"></a>SysCtlPeripheralReady</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralReady))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_Init
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Init
</UL>

<P><STRONG><a name="[7]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, my_timer.o(i.TIMER0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TIMER0_IRQHandler &rArr; Get_Motor_Speed &rArr; Get_QEI_Count
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pid_control
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pid_OutLimit
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Motor_Speed
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_MotorPwm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> my_timer.o(i.Timer0_Init)
</UL>
<P><STRONG><a name="[54]"></a>Timer0_Init</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, my_timer.o(i.Timer0_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Timer0_Init &rArr; TimerIntRegister &rArr; _TimerIntNumberGet
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntRegister
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[55]"></a>TimerConfigure</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, timer.o(i.TimerConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Init
</UL>

<P><STRONG><a name="[57]"></a>TimerIntRegister</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, timer.o(i.TimerIntRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = TimerIntRegister &rArr; _TimerIntNumberGet
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TimerIntNumberGet
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntRegister
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Init
</UL>

<P><STRONG><a name="[56]"></a>TimerLoadSet</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, timer.o(i.TimerLoadSet))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Init
</UL>

<P><STRONG><a name="[59]"></a>Track_Direction_Control</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, track.o(i.Track_Direction_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Track_Direction_Control &rArr; Get_Grayscale_Offset &rArr; KalmanFilter_Update &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pid_control
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pid_OutLimit
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Grayscale_Offset
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task1
</UL>

<P><STRONG><a name="[5a]"></a>Track_Direction_Control1</STRONG> (Thumb, 186 bytes, Stack size 48 bytes, track.o(i.Track_Direction_Control1))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = Track_Direction_Control1 &rArr; Get_Grayscale_Offset &rArr; KalmanFilter_Update &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pid_control
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pid_OutLimit
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Grayscale_Offset
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task2
</UL>

<P><STRONG><a name="[5b]"></a>Track_Direction_Control2</STRONG> (Thumb, 186 bytes, Stack size 48 bytes, track.o(i.Track_Direction_Control2))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = Track_Direction_Control2 &rArr; Get_Grayscale_Offset &rArr; KalmanFilter_Update &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pid_control
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pid_OutLimit
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Grayscale_Offset
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3
</UL>

<P><STRONG><a name="[5c]"></a>Track_Direction_Control3</STRONG> (Thumb, 186 bytes, Stack size 48 bytes, track.o(i.Track_Direction_Control3))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = Track_Direction_Control3 &rArr; Get_Grayscale_Offset1 &rArr; KalmanFilter_Update &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pid_control
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pid_OutLimit
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Grayscale_Offset1
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3
</UL>

<P><STRONG><a name="[9]"></a>UART0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uart0.o(i.UART0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> uart0.o(i.uart0_Init)
</UL>
<P><STRONG><a name="[62]"></a>UARTCharPut</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uart.o(i.UARTCharPut))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[5d]"></a>UARTIntRegister</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, uart.o(i.UARTIntRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UARTIntRegister &rArr; _UARTIntNumberGet
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UARTIntNumberGet
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntRegister
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_Init
</UL>

<P><STRONG><a name="[66]"></a>UARTStdioConfig</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, uartstdio.o(i.UARTStdioConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTStdioConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_Init
</UL>

<P><STRONG><a name="[5f]"></a>__0printf$1</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[7b]"></a>__1printf$1</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1), UNUSED)

<P><STRONG><a name="[3f]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Process
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task2
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task1
</UL>

<P><STRONG><a name="[7c]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[7d]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[7e]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[8]"></a>fputc</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, uart0.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf1.o(i.__0printf$1)
</UL>
<P><STRONG><a name="[4]"></a>main</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, test.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = main &rArr; Menu_Process &rArr; task4 &rArr; Track_Direction_Control2 &rArr; Get_Grayscale_Offset &rArr; KalmanFilter_Update &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QEI1_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QEI0_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pid_Init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor_Init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Process
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Line7_Init
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[65]"></a>motor_4_speed</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, motor.o(i.motor_4_speed))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task2
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task1
</UL>

<P><STRONG><a name="[40]"></a>task1</STRONG> (Thumb, 260 bytes, Stack size 32 bytes, key.o(i.task1))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = task1 &rArr; Track_Direction_Control &rArr; Get_Grayscale_Offset &rArr; KalmanFilter_Update &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_4_speed
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_On
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Off
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Process
</UL>

<P><STRONG><a name="[41]"></a>task2</STRONG> (Thumb, 282 bytes, Stack size 32 bytes, key.o(i.task2))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = task2 &rArr; Track_Direction_Control1 &rArr; Get_Grayscale_Offset &rArr; KalmanFilter_Update &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_4_speed
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control1
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_On
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Off
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Process
</UL>

<P><STRONG><a name="[42]"></a>task3</STRONG> (Thumb, 298 bytes, Stack size 32 bytes, key.o(i.task3))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = task3 &rArr; Track_Direction_Control3 &rArr; Get_Grayscale_Offset1 &rArr; KalmanFilter_Update &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_4_speed
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control3
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control2
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_On
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Off
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Process
</UL>

<P><STRONG><a name="[43]"></a>task4</STRONG> (Thumb, 666 bytes, Stack size 32 bytes, key.o(i.task4))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = task4 &rArr; Track_Direction_Control2 &rArr; Get_Grayscale_Offset &rArr; KalmanFilter_Update &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_4_speed
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Track_Direction_Control2
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_On
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Off
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Process
</UL>

<P><STRONG><a name="[63]"></a>uart0_Init</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, uart0.o(i.uart0_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = uart0_Init &rArr; UARTIntRegister &rArr; _UARTIntNumberGet
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntRegister
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>_GPIOIntNumberGet</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, gpio.o(i._GPIOIntNumberGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _GPIOIntNumberGet
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntRegister
</UL>

<P><STRONG><a name="[5e]"></a>_UARTIntNumberGet</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, uart.o(i._UARTIntNumberGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _UARTIntNumberGet
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntRegister
</UL>

<P><STRONG><a name="[58]"></a>_TimerIntNumberGet</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, timer.o(i._TimerIntNumberGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _TimerIntNumberGet
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntRegister
</UL>

<P><STRONG><a name="[60]"></a>_printf_core</STRONG> (Thumb, 336 bytes, Stack size 88 bytes, printf1.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$1
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
